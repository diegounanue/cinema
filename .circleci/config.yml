version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show Current Branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
            - app-{{ checksum "package.json" }}
            - app-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json" }}
  deploy_to_aws_s3:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show Current Branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
           name: Build Project
           command: |
             npm install
             npm run build
             cd build
             zip ../build.zip -r * .[^.]*
             echo "Build successful"
      - run:
          name: Deploy to AWS S3
          command: aws --region ${AWS_REGION} s3 sync ~repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
  deploy_to_aws_cloudfront:
    docker:
      - image: circleci/node:13
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show Current Branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy_to_aws_s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy_to_aws_cloudfront:
          requires:
            - deploy_to_aws_s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master

